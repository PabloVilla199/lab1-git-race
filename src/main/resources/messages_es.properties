# Mensajes en español
app.title=Aplicación Web Moderna
app.message=¡Bienvenido a la Aplicación Web
js.message.updated =Mensaje actualizado
app.language=Idioma
greeting.hello=¡Hola, {0}!
greeting.default=Hola Mundo
navbar.health=Estado
navbar.api=API
footer.copyright=\u00a9 2025 Aplicación Web Moderna. Construida con Spring Boot 3.5.3 & Kotlin 2.2.10
welcome.title=Bienvenido a la Aplicación Web 
debug.title=Pruebas HTTP Interactivas y Depuración
debug.subtitle=Herramienta Educativa del Cliente
debug.description=Esta sección demuestra peticiones y respuestas HTTP usando la API Fetch de JavaScript. ¡Todas las interacciones mostrarán comunicación HTTP real en acción!
debug.web.title=Saludo de Página Web
debug.web.description=Prueba la página principal con saludo personalizado
debug.web.placeholder=Introduce tu nombre
debug.web.button=Probar Página Web
debug.api.title=Endpoints de API
debug.api.description=Prueba la API REST con respuesta JSON
debug.api.placeholder=Introduce nombre (opcional)
debug.api.button=Probar /api/hello
debug.health.title=Verificación de Estado
debug.health.description=Prueba el endpoint de estado de la aplicación
debug.health.button=Probar /actuator/health
debug.devtools.button=Cómo Abrir Herramientas de Desarrollo
debug.request.title=Petición HTTP
debug.response.title=Respuesta HTTP
debug.request.placeholder=Haz clic en un botón de prueba arriba para ver los detalles de la petición HTTP...
debug.response.placeholder=Haz clic en un botón de prueba arriba para ver los detalles de la respuesta HTTP...
debug.learning.title=Notas de Aprendizaje:
debug.learning.fetch=Fetch API: Forma moderna de JavaScript para hacer peticiones HTTP
debug.learning.promises=Basado en Promesas: Operaciones asíncronas usando .then() y async/await
debug.learning.json=Respuesta JSON: Los endpoints de API devuelven datos estructurados
debug.learning.status=Códigos de Estado: 200 = éxito, 404 = no encontrado, 500 = error del servidor
debug.learning.headers=Cabeceras: Metadatos enviados con cada petición y respuesta